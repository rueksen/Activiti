<?xml version="1.0" encoding="UTF-8"?>
<project name="stellenausschreibung" default="compile">

  <property file="build.properties" />

  <property name="target.dir" value="target" />

  <property name="activiti.cfg.jar" value="${activiti.tomcat.home.lib}/activiti-cfg.jar" />

  <property name="maven.repo.local" value="${user.home}/.m2/repository" />
  <!-- we don't care about the exact version, but the download often changes and old versions are no longer available, so change it to 2.x -->
  <property name="maven.ant.tasks.dir" value="${maven.repo.local}/org/apache/maven/maven-ant-tasks/2.x/" />
  <property name="maven.ant.tasks.jar" value="${maven.ant.tasks.dir}/maven-ant-tasks-2.x.jar" />
  <property name="maven.ant.tasks.bootstrap.location" value="http://www.apache.org/dist/maven/binaries/maven-ant-tasks-2.1.3.jar" />
  <available property="maven.ant.tasks.jar.exists" file="${maven.ant.tasks.jar}" />

  <!--
    This will download the "latest version" of the maven-ant-tasks if needed
  -->
  <target name="bootstrap.maven.tasks" unless="maven.ant.tasks.jar.exists">
    <mkdir dir="${maven.ant.tasks.dir}" />
    <get src="${maven.ant.tasks.bootstrap.location}" dest="${maven.ant.tasks.jar}" />
  </target>

  <!-- This will make the connection of ANT to your maven project -->
  <target name="mvn-init" unless="compile.classpath" depends="bootstrap.maven.tasks"
    xmlns:artifact="urn:maven-artifact-ant">
    <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant" classpath="${maven.ant.tasks.jar}" />
    <condition property="maven.repo.local" value="${maven.repo.local}" else="${user.home}/.m2/repository">
      <isset property="maven.repo.local" />
    </condition>
    <echo>Using maven.repo.local=${maven.repo.local}</echo>
    <artifact:localRepository id="local.repository" path="${maven.repo.local}" />

    <artifact:pom file="pom.xml" id="maven.project" />
    <artifact:dependencies pathId="compile.classpath" useScope="compile">
      <pom refid="maven.project" />
      <localRepository refid="local.repository" />
    </artifact:dependencies>
    <artifact:dependencies  filesetId="compile.dependencies" scopes="compile">
      <pom refid="maven.project" />
      <localRepository refid="local.repository" />
    </artifact:dependencies>
  </target>

  <target name="clean">
    <delete dir="target" />
  </target>

  <target name="compile" depends="mvn-init">
    <mkdir dir="target/classes" />
    <javac srcdir="src/main/java" destdir="target/classes"
      classpathref="compile.classpath" />
    <copy todir="target/classes">
      <fileset dir="src/main/java" excludes="**/*.java" />
    </copy>
    <copy todir="target/classes" failonerror="false">
      <fileset dir="src/main/resources" />
    </copy>
  </target>

  <!-- package our war file (we use war to include all necessary dependencies, deployable on camunda fox platform with Java EE Subsystem -->
  <target name="package.fox" depends="compile, mvn-init">

    <!-- copy necessary libs for deployment -->
    <mkdir dir="${target.dir}/libs"/>
    <copy todir="${target.dir}/libs">
      <fileset refid="compile.dependencies" />
      <mapper type="flatten" />
    </copy>

    <!-- add META-INF/process.xml to mark .war for camunda fox deployer -->
    <touch file = "${target.dir}/processes.xml" />
    <war destfile="${target.dir}/${ant.project.name}.war" needxmlfile="false" >
      <lib dir="${target.dir}/libs" />
      <classes dir="${target.dir}/classes">
        <exclude name="activiti.cfg.xml"/>
      </classes>
      <metainf file="${target.dir}/processes.xml" />
    </war>
  </target>

  <target name="deploy.fox" depends="package.fox">
    <copy file="${target.dir}/${ant.project.name}.war" todir="${deploy.dir}"/>
  </target>

 <!-- package and deployment for Activiti OSS Tomcat -->
  <target name="package.tomcat" depends="compile">
    <jar destfile="${target.dir}/${ant.project.name}.jar" basedir="target/classes">
      <include name="**/*.class" />
    </jar>
    <jar destfile="${target.dir}/${ant.project.name}.bar" basedir="src/main/resources">
      <include name="**/*.bpmn20.xml" />
      <include name="**/*.form" />
    </jar>
  </target>

  <target name="deploy.tomcat.process" depends="package.tomcat, mvn-init">
    <taskdef name="deploy-bar" classname="org.activiti.engine.impl.ant.DeployBarTask">
      <classpath>
        <!-- add activiti.cfg.xml for database connection -->
        <pathelement location="src/deploy/resources" />
        <path refid="runtime.classpath" />
      </classpath>
    </taskdef>
    <deploy-bar file="${target.dir}/${ant.project.name}.bar" />
  </target>

  <target name="deploy.tomcat.jar" depends="package.tomcat, mvn-init" xmlns:artifact="urn:maven-artifact-ant">
    <!-- A bit hacky, but quickest way to deploy classes to your Tomcat -->
    <copy file="${target.dir}/${ant.project.name}.jar" todir="${tomcat.activiti.lib.dir}"/>

    <!-- deploy additional dependencies here: -->
    <!-- Example:
    <artifact:dependencies filesetId="twitter.dependencies">
        <dependency groupId="org.twitter4j" artifactId="twitter4j-core" version="2.1.0" />
    </artifact:dependencies>
    <copy todir="${tomcat.activiti.lib.dir}">
        <fileset refid="twitter.dependencies" />
        <mapper type="flatten" />
    </copy>
    -->

    <echo message="Restart your Tomcat that the changes in the classpath can take effect" />
  </target>

</project>